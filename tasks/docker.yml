- name: Check if Docker is already present.
  ansible.builtin.command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script.
  ansible.builtin.get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when: docker_command_result.rc == 1

- name: Run Docker install convenience script.
  ansible.builtin.command: /tmp/get-docker.sh
  register: docker_install_output
  environment:
    CHANNEL: stable
  when: docker_command_result.rc == 1
  become: true

- name: Ensure Docker is started.
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Ensure dependencies are installed (Debian).
  ansible.builtin.apt:
    name:
      - libffi-dev
      - libssl-dev
      - python3-dev
      - python3-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Debian"
  become: true

- name: Install Docker Compose using Pip.
  ansible.builtin.pip:
    name: docker-compose
    state: present
    executable: pip3
  become: true

- name: Ensure {{ ansible_user }} user is added to the docker group.
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  become: true

- name: Reset connection so docker group is picked up.
  ansible.builtin.meta: reset_connection

- name: Create docker network
  community.docker.docker_network:
    name: mainnet
    driver: bridge
    state: present
