---
- name: Assert source mount points exist
  ansible.builtin.stat:
    path: "{{ item.path }}"
  with_items: "{{ ritsu.components.samba.mount_points }}"
  register: samba_mount_points_exist
  when: ritsu.components.samba.state == 'present'

- name: Assert source mount points are directories
  ansible.builtin.assert:
    that:
      - item.stat.exists
      - item.stat.isdir
  with_items: "{{ samba_mount_points_exist.results }}"
  when: ritsu.components.samba.state == 'present'

- name: Ensure dependencies are installed
  ansible.builtin.apt:
    name:
      - samba
      - samba-common
    state: "{{ ritsu.components.samba.state }}"
    update_cache: false
  become: true
  when: ritsu.components.samba.state == 'present'

- name: Ensure samba user is installed
  ansible.builtin.shell: >
    set -o nounset -o pipefail -o errexit &&
    (pdbedit --user={{ username }} 2>&1 > /dev/null) \
    || (echo {{ password }}; echo {{ password }}) \
    | smbpasswd -s -a {{ username }}
  args:
    executable: /bin/bash
  vars:
    username: "{{ ritsu.components.samba.user.username }}"
    password: "{{ ritsu.components.samba.user.password }}"
  become: true
  no_log: true
  register: samba_create_users
  changed_when: "'Added user' in samba_create_users.stdout"
  when: ritsu.components.samba.state == 'present'

- name: Create samba config
  ansible.builtin.template:
    src: samba.conf.j2
    dest: /etc/samba/smb.conf
    owner: root
    group: root
    mode: "0644"
  become: true
  notify: Restart Samba
  when: ritsu.components.samba.state == 'present'

- name: Delete samba config
  ansible.builtin.file:
    path: /etc/samba/smb.conf
    state: absent
  become: true
  when: ritsu.components.samba.state == 'absent'
