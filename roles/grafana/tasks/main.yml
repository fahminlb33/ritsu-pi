- name: Check if data directory is exists
  ansible.builtin.stat:
    path: "{{ data_dir }}/grafana"
  register: grafana_data_dir_stat

- name: Create data directory
  ansible.builtin.file:
    path: "{{ data_dir }}/grafana"
    state: directory
    mode: '0755'
  when: grafana_data_dir_stat.stat.exists == false

- name: Check if config directory is exists
  ansible.builtin.stat:
    path: "{{ config_dir }}/grafana/provisioning/datasources"
  register: grafana_config_dir_stat

- name: Create config directory
  ansible.builtin.file:
    path: "{{ config_dir }}/grafana/provisioning/datasources"
    state: directory
    mode: '0755'
  when: grafana_config_dir_stat.stat.exists == false

- name: Generate config files
  ansible.builtin.template:
    src: templates/{{ item.src }}
    dest: "{{ config_dir }}/grafana/{{ item.dest }}"
    mode: 0644
  loop:
    - src: grafana_provisioning_datasource.yml.j2
      dest: provisioning/datasources/datasource.yml

- name: Pull Grafana image from Docker Hub
  community.docker.docker_image:
    name: "{{ grafana.image }}"
    source: pull

- name: Create new docker volume for data store
  community.docker.docker_volume:
    name: grafana_data
    state: present
    driver: local
    driver_options:
      type: none
      o: bind
      device: "{{ data_dir }}/grafana"

- name: Start and connect container to main network (with Grafana provisioning)
  community.docker.docker_container:
    name: grafana
    image: "{{ grafana.image }}"
    state: started
    restart: true
    restart_policy: always
    exposed_ports:
      - "3000:3000"
    published_ports:
      - "{{ grafana.port }}:3000"
    networks:
      - name: mainnet
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana.password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: flant-statusmap-panel,ae3e-plotly-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - "{{ config_dir }}/grafana/provisioning/:/etc/grafana/provisioning/:ro"
  when: grafana.standalone == false

- name: Start and connect container to main network (without Grafana provisioning)
  community.docker.docker_container:
    name: grafana
    image: "{{ grafana.image }}"
    state: started
    restart: true
    restart_policy: always
    hostname: grafana
    exposed_ports:
      - "{{ grafana.port }}:3000"
    published_ports:
      - "{{ grafana.port }}:3000"
    networks:
      - name: mainnet
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana.password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: flant-statusmap-panel,ae3e-plotly-panel
    volumes:
      - grafana_data:/var/lib/grafana
  when: grafana.standalone == true
