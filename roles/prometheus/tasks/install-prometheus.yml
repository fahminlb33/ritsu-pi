---
- name: Create config and data directory
  ansible.builtin.file:
    path: "{{ config_dir }}/prometheus/{{ item }}"
    state: directory
    mode: "0777"
  loop:
    - etc
    - data

- name: Generate config files
  ansible.builtin.template:
    src: templates/prometheus.yml.j2
    dest: "{{ config_dir }}/prometheus/etc/prometheus.yml"
    mode: "0775"
  notify: Restart Prometheus

- name: Pull image from registry
  community.docker.docker_image:
    state: "{{ prometheus_state }}"
    name: "{{ prometheus_image }}"
    source: pull

- name: Start and connect container to network
  community.docker.docker_container:
    name: prometheus
    image: "{{ prometheus_image }}"
    user: "{{ docker_user.uid }}:{{ docker_user.gid }}"
    restart_policy: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.retention.size={{ prometheus_retention.size }}
      - --storage.tsdb.retention.time={{ prometheus_retention.time }}
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    published_ports:
      - "{{ prometheus_port }}:9090"
    networks:
      - name: "{{ docker_network.name }}"
    volumes:
      - "{{ config_dir }}/prometheus/etc:/etc/prometheus/:rw"
      - "{{ config_dir }}/prometheus/data:/prometheus/data/:rw"
    labels:
      flame.type: "application"
      flame.name: "Prometheus"
      flame.url: "http://{{ flame_hostname }}:{{ prometheus_port }}"
      flame.icon: "custom"
    state: "{{ 'started' if (prometheus_state == 'present') else 'absent' }}"
