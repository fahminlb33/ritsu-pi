- name: Check if data directory is exists
  ansible.builtin.stat:
    path: "{{ data_dir }}/prometheus"
  register: prometheus_data_dir_stat

- name: Create data directory
  ansible.builtin.file:
    path: "{{ data_dir }}/prometheus"
    state: directory
    mode: '0755'
  when: prometheus_data_dir_stat.stat.exists == false

- name: Check if config directory is exists
  ansible.builtin.stat:
    path: "{{ config_dir }}/prometheus"
  register: prometheus_config_dir_stat

- name: Create config directory
  ansible.builtin.file:
    path: "{{ config_dir }}/prometheus"
    state: directory
    mode: '0755'
  when: prometheus_config_dir_stat.stat.exists == false

- name: Generate config files
  ansible.builtin.template:
    src: templates/{{ item.src }}
    dest: "{{ config_dir }}/prometheus/{{ item.dest }}"
    mode: 0644
  loop:
    - src: prometheus.yml.j2
      dest: prometheus.yml

- name: Pull image from Docker Hub
  community.docker.docker_image:
    name: "{{ prometheus.image }}"
    source: pull

- name: Create new docker volume for data store
  community.docker.docker_volume:
    name: prometheus_data
    state: present
    driver: local
    driver_options:
      type: none
      o: bind
      device: "{{ data_dir }}/prometheus"

- name: Start and connect container to main network
  community.docker.docker_container:
    name: prometheus
    image: "{{ prometheus.image }}"
    restart: true
    state: started
    restart_policy: always
    hostname: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    exposed_ports:
      - "{{ prometheus.port }}:9090"
    published_ports:
      - "{{ prometheus.port }}:9090"
    networks:
      - name: mainnet
    volumes:
      - "{{ config_dir }}/prometheus/:/etc/prometheus/:ro"
      - prometheus_data:/prometheus
