---
- name: Create Pi-hole config directory
  ansible.builtin.file:
    path: "{{ pihole.config_dir }}"
    state: directory
    mode: 0755
  become: false

- name: Create environment variable
  ansible.builtin.template:
    src: templates/env.j2
    dest: "{{ pihole.config_dir }}/pihole.env"
    mode: 0755
  register: restart_pihole

- name: Check DNSCrypt settings if it is enabled
  ansible.builtin.assert:
    that:
      - ritsu_components.dnscrypt == true
    fail_msg: "Before using DNSCrypt with Pi-Hole, DNSCrypt must be enabled"
    success_msg: "Using Pi-Hole with DNSCrypt integration"
  when: pihole.dnscrypt == true

- name: Pull image from Docker Hub
  community.docker.docker_image:
    name: "{{ pihole.image }}"
    source: pull

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
- name: Start and connect container to main network
  community.docker.docker_container:
    name: pihole
    image: "{{ pihole.image }}"
    state: started
    restart_policy: unless-stopped
    capabilities:
      - NET_ADMIN
    dns_servers:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    exposed_ports:
      - "53:53/tcp"
      - "53:53/udp"
    published_ports:
      - "53:53/tcp"
      - "53:53/udp"
      # expose port 80 IF reverse proxy is disabled, otherwise expose port 8080 from 80
      - "{{ pihole.port }}:{{ pihole.port }}/tcp"
    env_file: '{{ pihole.config_dir }}/pihole.env'
    networks:
      - name: mainnet
    volumes:
      - '{{ pihole.config_dir }}/etc/:/etc/pihole/'
      - '{{ pihole.config_dir }}/dnsmasq.d/:/etc/dnsmasq.d/'
      - '{{ pihole.config_dir }}/index.html:/usr/share/nginx/html/index.html'
